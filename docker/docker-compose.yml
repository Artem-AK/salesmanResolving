version: "3.5"

services:
  postgres:
    container_name: postgres_container
    image: postgres:13.4
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      APP_DB_USER: admin
      APP_DB_PASS: admin
      USER_SERVICE_APP_DB_NAME: ${USER_SERVICE_APP_DB_NAME:-user-service}
      USER_SERVICE_APP_TEST_DB_NAME: ${USER_SERVICE_APP_TEST_DB_NAME:-user-service-test}
      NOTIFICATION_SERVICE_APP_DB_NAME: ${NOTIFICATION_SERVICE_APP_DB_NAME:-notification-service}
      ORDER_SERVICE_APP_DB_NAME: ${ORDER_SERVICE_APP_DB_NAME:-order-service}
      AUTHORIZATION_SERVICE_APP_DB_NAME: ${AUTHORIZATION_SERVICE_APP_DB_NAME:-authorization-service}
      MES_SERVICE_APP_DB_NAME: ${MES_SERVICE_APP_DB_NAME:-mes-service}
      PGDATA: /data/postgres
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-javelineua@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/root/.pgadmin

    ports:
      - "${PGADMIN_PORT:-2}:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: